plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
}

group = 'org.hkurh.doky'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.2'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.2'

    implementation 'org.flywaydb:flyway-core:8.3.0'
    implementation 'org.flywaydb:flyway-mysql:8.3.0'
    implementation 'mysql:mysql-connector-java:8.0.27'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.modelmapper:modelmapper:3.0.0'
    implementation 'joda-time:joda-time:2.10.13'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.13.1'
    implementation 'commons-io:commons-io:2.11.0'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.6.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.2'
    testImplementation 'org.springframework:spring-mock:2.0.8'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.13'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
}

tasks.named("bootJar") {
    mainClass.set("org.hkurh.doky.DokyApplication")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.register("bootRunLocal") {
    group = "application"
    description = "Runs the Spring Boot application with the local profile"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "local")
        }
    }
    finalizedBy("bootRun")
}

tasks.register("bootRunDev") {
    group = "application"
    description = "Runs the Spring Boot application with the dev profile"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "dev")
        }
    }
    finalizedBy("bootRun")
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

def profile = 'local'
task integrationTest(type: Test) {
    useJUnitPlatform()
    group = "verification"
    description = "Run integration tests"
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
    doFirst {
        tasks.integrationTest.configure {
            systemProperty("spring.profiles.active", profile)
        }
    }
}

check.dependsOn integrationTest

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'org.hkurh.doky.DokyApplication'
    }
    baseName = 'fat-server'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
