plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'com.heroku.sdk.heroku-gradle' version '3.0.0'
}

group = 'org.hkurh.doky'
version = '0.1'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.apache.groovy:groovy-all:4.0.9'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.2'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.2'

    implementation 'org.flywaydb:flyway-core:8.3.0'
    implementation 'org.flywaydb:flyway-mysql:8.3.0'
    implementation 'mysql:mysql-connector-java:8.0.27'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'

    implementation 'org.modelmapper:modelmapper:3.0.0'
    implementation 'joda-time:joda-time:2.10.13'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.13.1'
    implementation 'commons-io:commons-io:2.11.0'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.6.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.2'
    testImplementation 'org.springframework:spring-mock:2.0.8'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.13'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'

    testImplementation('io.rest-assured:rest-assured:5.3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation platform('org.spockframework:spock-bom:2.4-M1-groovy-4.0')
    testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
    testImplementation 'com.athaydes:spock-reports:2.4.0-groovy-4.0'
    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'
}

tasks.named("bootJar") {
    mainClass.set("org.hkurh.doky.DokyApplication")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register("bootRunLocal") {
    group = "application"
    description = "Runs the Spring Boot application with the local profile"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "local")
        }
    }
    finalizedBy("bootRun")
}

tasks.register("bootRunDev") {
    group = "application"
    description = "Runs the Spring Boot application with the dev profile"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "dev")
        }
    }
    finalizedBy("bootRun")
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

configurations {
    apiTestImplementation.extendsFrom testImplementation
    apiTestRuntime.extendsFrom testRuntime
}
sourceSets {
    'apiTest' {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/apiTest/groovy')
        }
        resources.srcDir file('src/apiTest/resources')
    }
}
tasks.register('apiTest', Test) {
    useJUnitPlatform()
    group = "verification"
    description = "Run API tests"
    testClassesDirs = sourceSets.apiTest.output.classesDirs
    classpath = sourceSets.apiTest.runtimeClasspath
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

check.dependsOn 'apiTest'

tasks.register('fatJar', Jar) {
    manifest {
        attributes 'Main-Class': 'org.hkurh.doky.DokyApplication'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

heroku {
    appName = 'doky-dev-server'
    jdkVersion = 11
    includes = ['build/libs/server-0.1.jar']
    includeBuildDir = false
    processTypes(
            web: 'java $JAVA_OPTS -jar build/libs/server-0.1.jar -Dserver.port=$PORT $JAR_OPTS'
    )
}
